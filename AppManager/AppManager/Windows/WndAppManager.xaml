<cw:DialogWindow
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:am="clr-namespace:AppManager"
	xmlns:cw="clr-namespace:CommonLib.Windows;assembly=CommonLib"
	x:Class="AppManager.WndAppManager"
	x:Name="AppsManagerWindow"
	mc:Ignorable="d"
	Title="{x:Static am:Strings.APP_MANAGER}"
	Width="425"
	Height="525"
	WindowStartupLocation="CenterOwner"
	ShowInTaskbar="False"
	MinWidth="250"
	MinHeight="300"
	Icon="/AppManager;component/Resources/1leftarrow_1159.ico"
	Activated="AppsManagerWindow_Activated">

	<Window.Resources>
		<Style
			x:Key="AppTypeItemStyle"
			TargetType="ListBoxItem">
			<!--<Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="2,0,0,0"/>-->
			<Setter
				Property="Template">
				<Setter.Value>
					<ControlTemplate
						TargetType="{x:Type ListBoxItem}">
						<Border
							x:Name="Bd"
							SnapsToDevicePixels="true"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Padding="{TemplateBinding Padding}">
							<ContentPresenter
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger
								Property="IsSelected"
								Value="true">
								<!--<Setter Property="Foreground" Value="Red"/>-->
								<Setter
									Property="Background"
									TargetName="Bd"
									Value="#FFB0CCF7" />
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition
										Property="IsSelected"
										Value="true" />
									<Condition
										Property="Selector.IsSelectionActive"
										Value="false" />
								</MultiTrigger.Conditions>
								<Setter
									Property="Background"
									TargetName="Bd"
									Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
								</Setter>
								<Setter
									Property="Foreground"
									Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
							</MultiTrigger>
							<Trigger
								Property="IsEnabled"
								Value="false">
								<Setter
									Property="Foreground"
									Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style
			x:Key="AppItemStyle"
			TargetType="ListViewItem">
			<Setter Property="HorizontalContentAlignment" Value="Stretch" />
			<Setter
				Property="Template">
				<Setter.Value>
					<ControlTemplate
						TargetType="{x:Type ListViewItem}">
						<Border
							x:Name="Bd"
							SnapsToDevicePixels="true"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Padding="{TemplateBinding Padding}">
							<GridViewRowPresenter
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger
								Property="IsSelected"
								Value="true">
								<!--<Setter Property="Foreground" Value="#FFDFDFDF"/>-->
								<Setter
									Property="Background"
									TargetName="Bd"
									Value="#FFB0CCF7" />
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition
										Property="IsSelected"
										Value="true" />
									<Condition
										Property="Selector.IsSelectionActive"
										Value="false" />
								</MultiTrigger.Conditions>
								<Setter
									Property="Background"
									TargetName="Bd"
									Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
								<Setter
									Property="Foreground"
									Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
							</MultiTrigger>
							<Trigger
								Property="IsEnabled"
								Value="false">
								<Setter
									Property="Foreground"
									Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<DataTemplate
			x:Key="myHeaderTemplate">
			<DockPanel>
				<CheckBox
					IsChecked="True"
					Click="CheckBox_Click" />
			</DockPanel>
		</DataTemplate>
		<DataTemplate
			x:Key="CheckCell">
			<StackPanel
				x:Name="Back"
				Orientation="Horizontal">
				<CheckBox
					Name="SelectedCheckBox"
					IsChecked="{Binding Path=Checked}" />
			</StackPanel>
		</DataTemplate>
		<DataTemplate
			x:Key="AppTypeInfo">
			<StackPanel
				x:Name="Back"
				Orientation="Vertical"
				Margin="4,2,0,2">
				<TextBlock
					Text="{Binding Path=AppTypeName}"
					FontSize="12" />
				<TextBlock
					Text="{Binding Path=AppTypeInfo}"
					FontSize="10"
					Foreground="#FF7A7979" />
			</StackPanel>
		</DataTemplate>
		<DataTemplate
			x:Key="EditableAppInfo">
			<Border
				Name="Back"
				BorderThickness="0,0,0,1"
				BorderBrush="#FFADADAD"
				Padding="0,0,0,4">
				<Grid
					Name="GridT">
					<Grid.RowDefinitions>
						<RowDefinition
							Height="50*" />
						<RowDefinition
							Height="50*" />
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition
							Width="40"
							MaxWidth="40" />
						<ColumnDefinition
							Width="*" />
						<ColumnDefinition
							Width="28"
							MaxWidth="28" />
					</Grid.ColumnDefinitions>
					<Image
						Grid.RowSpan="2"
						Source="{Binding Path=AppImage, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
						Width="24"
						Height="24" />
					<TextBox
						Grid.Column="1"
						Grid.ColumnSpan="2"
						Text="{Binding Path=AppName, Mode=TwoWay}"
						BorderBrush="{x:Null}"
						HorizontalAlignment="Stretch"
						GotFocus="TextBox_GotFocus"
						Background="Transparent">

						<!--<TextBox.Background>
							<Binding Path="Background">
								<Binding.RelativeSource>
									<RelativeSource Mode="FindAncestor" AncestorType="ScrollContentPresenter"/>
								</Binding.RelativeSource>
							</Binding>
						</TextBox.Background>-->
					</TextBox>
					<!--<TextBlock TextTrimming="WordEllipsis" Grid.Column="1" x:Name="AppItemPath" Grid.Row="1" Text="{Binding Path=AppPath, Mode=TwoWay}" Margin="4,4,0,0" HorizontalAlignment="Left"/>-->
					<TextBox
						Grid.Column="1"
						Grid.Row="1"
						x:Name="AppItemPath"
						Text="{Binding Path=ExecPath, Mode=TwoWay}"
						Margin="0,1,0,0"
						BorderBrush="{x:Null}"
						HorizontalAlignment="Stretch"
						GotFocus="TextBox_GotFocus"
						Background="Transparent">
						<!--<TextBox.Background>
							<Binding Path="Background">
								<Binding.RelativeSource>
									<RelativeSource Mode="FindAncestor" AncestorType="ScrollContentPresenter"/>
								</Binding.RelativeSource>
							</Binding>
						</TextBox.Background>-->
					</TextBox>
					<Button
						x:Name="AppItemPathSelect"
						Content="..."
						Grid.Row="1"
						Grid.Column="2"
						Width="28"
						Click="AppPathSelect_Click" />
				</Grid>
			</Border>
		</DataTemplate>
		<DataTemplate
			x:Key="SemiEditableAppInfo">
			<Border
				Name="BorderT"
				BorderThickness="0,0,0,1"
				BorderBrush="#FFADADAD"
				Padding="0,0,0,4">
				<Grid
					Name="GridT">
					<Grid.RowDefinitions>
						<RowDefinition
							Height="50*" />
						<RowDefinition
							Height="50*" />
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition
							Width="40" />
						<ColumnDefinition
							Width="*" />
					</Grid.ColumnDefinitions>
					<Image
						Grid.RowSpan="2"
						Source="{Binding Path=AppImage, Mode=OneWay}"
						Width="24"
						Height="24" />
					<TextBox
						Grid.Column="1"
						Text="{Binding Path=AppName, Mode=TwoWay}"
						BorderBrush="{x:Null}"
						Width="Auto"
						Background="{x:Null}"
						HorizontalAlignment="Stretch"
						GotFocus="ScanTextBox_GotFocus"
						TextChanged="TextBox_TextChanged" />
					<TextBlock
						Grid.Column="1"
						x:Name="AppItemPath"
						Grid.Row="1"
						Text="{Binding Path=ExecPath, Mode=OneWay}"
						Margin="4,4,0,0"
						HorizontalAlignment="Left" />
				</Grid>
			</Border>
		</DataTemplate>
	</Window.Resources>

	<TabControl
		Name="AppTabs"
		IsSynchronizedWithCurrentItem="True">
		<TabItem
			Header="{x:Static am:Strings.APP_TYPES}">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition
						Height="Auto" />
					<RowDefinition
						Height="*" />
				</Grid.RowDefinitions>
				<ListBox
					ItemTemplate="{StaticResource AppTypeInfo}"
					ItemContainerStyle="{StaticResource AppTypeItemStyle}"
					IsSynchronizedWithCurrentItem="True"
					x:Name="AppTypes"
					Margin="8,0,8,8"
					Grid.Row="1"
					SelectionChanged="AppTypes_SelectionChanged" />
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition
							Width="Auto" />
						<ColumnDefinition
							Width="100*" />
						<ColumnDefinition
							Width="Auto"
							MinWidth="20" />
						<ColumnDefinition
							Width="Auto"
							MinWidth="20" />
						<ColumnDefinition
							Width="Auto"
							MinWidth="20" />
						<ColumnDefinition
							Width="Auto"
							MinWidth="24" />
					</Grid.ColumnDefinitions>
					<Label
						Margin="8,9,0,6"
						Content="{x:Static am:Strings.APP_TYPE_NAME}"
						x:Name="AppTypeLabel"
						HorizontalAlignment="Left" />
					<TextBox
						Text="{Binding Path=SelectedItem.AppTypeName, ElementName=AppTypes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
						TextWrapping="Wrap"
						x:Name="AppTypeName"
						Grid.Column="1"
						Margin="4,12" />
					<Button
						Width="24"
						x:Name="BtnAppTypeUp"
						Margin="0,12,4,12"
						Grid.Column="2"
						Click="BtnAppTypeUp_Click">
						<Image
							Source="/AppManager;component/Resources/up_16.png" />
					</Button>
					<Button
						Width="24"
						x:Name="BtnAppTypeDown"
						Margin="0,12,4,12"
						Grid.Column="3"
						Click="BtnAppTypeDown_Click">
						<Image
							Source="/AppManager;component/Resources/down_16.png" />
					</Button>
					<Button
						Width="24"
						Content="+"
						x:Name="BtnAddAppType"
						Click="BtnAddAppType_Click"
						Margin="0,12,4,12"
						Grid.Column="4" />
					<Button
						Width="24"
						Content="-"
						x:Name="BtnRemoveAppType"
						Click="BtnRemoveAppType_Click"
						Grid.Column="5"
						HorizontalAlignment="Left"
						Margin="0,12,8,12" />
				</Grid>
			</Grid>
		</TabItem>
		<TabItem
			Header="{x:Static am:Strings.APPLICATIONS}">
			<Grid
				Height="Auto"
				Width="Auto"
				Name="AppTypesApp">
				<Grid.RowDefinitions>
					<RowDefinition
						Height="Auto" />
					<RowDefinition
						Height="100*" />
					<RowDefinition
						Height="8" />
				</Grid.RowDefinitions>
				<ListBox
					Grid.Row="1"
					Margin="8,0"
					Name="AppList"
					ItemsSource="{Binding ElementName=AppTypeSelector, Path=SelectedItem.AppInfos}"
					HorizontalContentAlignment="Stretch"
					IsSynchronizedWithCurrentItem="True"
					ItemTemplate="{StaticResource EditableAppInfo}"
					ItemContainerStyle="{StaticResource AppTypeItemStyle}"
					ScrollViewer.HorizontalScrollBarVisibility="Disabled"
					SelectionMode="Extended">
					<ListBox.ItemsPanel>
						<ItemsPanelTemplate>
							<VirtualizingStackPanel
								Orientation="Vertical"
								IsItemsHost="True"
								Width="{Binding Path=ActualWidth, 
											RelativeSource={RelativeSource Mode=FindAncestor, 
											AncestorType= {x:Type ScrollContentPresenter}}}" />
						</ItemsPanelTemplate>
					</ListBox.ItemsPanel>
				</ListBox>
				<ComboBox
					DisplayMemberPath="AppTypeName"
					Margin="8,12,120,12"
					Name="AppTypeSelector"
					SelectedItem="{Binding ElementName=AppTypes, Path=SelectedItem, Mode=TwoWay}" />
				<Button
					HorizontalAlignment="Right"
					Margin="0,12,92,12"
					Name="BtnAppUp"
					VerticalAlignment="Top"
					Width="24"
					Click="BtnAppUp_Click">
					<Image
						Source="/AppManager;component/Resources/up_16.png" />
				</Button>
				<Button
					HorizontalAlignment="Right"
					Margin="0,12,64,12"
					Name="BtnAppDown"
					VerticalAlignment="Top"
					Width="24"
					Click="BtnAppDown_Click">
					<Image
						Source="/AppManager;component/Resources/down_16.png" />
				</Button>
				<Button
					HorizontalAlignment="Right"
					Margin="0,12,36,12"
					Name="BtnAddApp" 
					Width="24"
					Click="BtnAddApp_Click">+</Button>
				<Button
					HorizontalAlignment="Right"
					Margin="0,12,8,12"
					Name="BtnRemoveApp"
					Width="24"
					Click="BtnRemoveApp_Click">-</Button>
			</Grid>
		</TabItem>
		<TabItem
			Header="{x:Static am:Strings.SEARCH}">
			<Grid
				Height="Auto"
				Width="Auto">
				<Grid.RowDefinitions>
					<RowDefinition
						Height="Auto" />
					<RowDefinition
						Height="100*" />
				</Grid.RowDefinitions>
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition
							Height="Auto" />
						<RowDefinition
							Height="Auto" />
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition
							Width="Auto" />
						<ColumnDefinition
							Width="Auto" />
						<ColumnDefinition
							Width="100*" />
						<ColumnDefinition
							Width="Auto" />
						<ColumnDefinition
							Width="Auto" />
						<ColumnDefinition
							Width="Auto" />
					</Grid.ColumnDefinitions>
					<StackPanel
						Margin="8,12,8,6"
						Grid.ColumnSpan="6"
						Orientation="Horizontal">
						<Button
                            MinHeight="24"
							Name="BtnScanQuickLaunch"
							Content="{x:Static am:Strings.SCAN_QUICK_LAUNCH}"
							Click="BtnScanQuickLaunch_Click" />
						<Button
                            MinHeight="24"
							Name="BtnScanAllProgs"
							Margin="4,0,0,0"
							Content="{x:Static am:Strings.SCAN_ALL_PROGS}"
							Click="BtnScanAllProgs_Click" />
					</StackPanel>
					<TextBox
                        MinHeight="24"
						Grid.Row="1"
						Margin="8,6,32,12"
						Name="TxtFolder"
						Grid.ColumnSpan="4" />
					<Button
                        MinHeight="24"
						Grid.Row="1"
						MinWidth="24"
						Margin="0,6,4,12"
						Name="BtnFolder"
						Click="BtnFolder_Click"
						Grid.Column="3">...</Button>
					<Button
                        MinHeight="24"
						Grid.Row="1"
						Margin="0,6,4,12"
						Name="_BtnSearch"
						Click="BtnSearch_Click"
						Content="{x:Static am:Strings.SCAN}"
						Grid.Column="4" />
					<Button
                        MinHeight="24"
						Grid.Row="1"
						Width="24"
						Margin="0,6,8,12"
						Name="BtnAddScan"
						Click="BtnAddScan_Click"
						Grid.Column="5">+</Button>
				</Grid>
				<ListView
					Margin="8,0,8,8"
					Name="AppScanList"
					Grid.Row="1"
					HorizontalContentAlignment="Stretch"
					ItemContainerStyle="{StaticResource AppItemStyle}"
					>
						<ListView.View>
							<GridView AllowsColumnReorder="false">
								<GridViewColumn 
									CellTemplate="{StaticResource CheckCell}"
									HeaderTemplate="{StaticResource myHeaderTemplate}"  
									Width="26"/>
								<GridViewColumn 
									CellTemplate="{StaticResource SemiEditableAppInfo}" 
									Header="{x:Static am:Strings.APPLICATION}" 
									Width="300"/>
							</GridView>
						</ListView.View>
					</ListView>
				</Grid>
			</TabItem>
		</TabControl>
</cw:DialogWindow>
